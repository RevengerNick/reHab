// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Project   Project[]
}

model Project {
  id        String    @id @default(uuid())
  publicId  String    @unique @default(nanoid())
  name      String
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  apiKey    String    @unique @default(uuid()) // Автоматически генерируем API ключ
  channels  Channel[]
  createdAt DateTime  @default(now())
  Log       Log[]
}

model Channel {
  id String @id @default(cuid()) // Короткий и безопасный ID

  // Связь с проектом
  project   Project @relation(fields: [projectId], references: [publicId])
  projectId String

  // Новые, более гибкие поля
  name     String // Имя, которое дает пользователь, напр. "Основной SendGrid"
  type     String // EMAIL, SMS и т.д.
  provider String // GENERIC_SMTP, MAILTRAP_API, SENDGRID_API и т.д.
  config   Json // Хранит любые настройки (API ключи, хосты...)
  priority Int    @default(0) // 0 - самый высокий, 1, 2 и т.д.

  // Поля для Circuit Breaker
  isEnabled     Boolean   @default(true)
  failureCount  Int       @default(0)
  lastFailureAt DateTime?

  createdAt DateTime @default(now())
}

enum ChannelType {
  EMAIL
  SMS
  TELEGRAM
  PUSH
}

model Log {
  id           String    @id @default(uuid())
  project      Project   @relation(fields: [projectId], references: [publicId])
  projectId    String
  status       String // Например, "ACCEPTED", "PROCESSING", "SENT", "FAILED"
  channel      String // EMAIL, SMS...
  recipient    String // email/телефон получателя
  sentAt       DateTime? // Время фактической отправки
  errorDetails String?
  eventId      String?
  createdAt    DateTime  @default(now())
}
